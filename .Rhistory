# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext("Titre du Graphique 2", side = 3, line = 10)
mtext("Titre du Graphique 3", side = 3, line = -2)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 1)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext("Titre du Graphique 2", side = 3, line = 14)
mtext("Titre du Graphique 3", side = 3, line = -2)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 1)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext("Titre du Graphique 2", side = 3, line = 13)
mtext("Titre du Graphique 3", side = 3, line = -2)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 1)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext("Titre du Graphique 2", side = 3, line = 12)
mtext("Titre du Graphique 3", side = 3, line = -2)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 1)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 12)
mtext("Titre du Graphique 3", side = 3, line = -2)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 1, 1)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 12)
mtext("Titre du Graphique 3", side = 3, line = -2)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 2, 2)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 12)
mtext("Titre du Graphique 3", side = 3, line = -2)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 12)
mtext("Titre du Graphique 3", side = 3, line = -2)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 4, 4)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 12)
mtext("Titre du Graphique 3", side = 3, line = -2)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 12)
mtext("Titre du Graphique 3", side = 3, line = -2)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 12)
mtext("Titre du Graphique 3", side = 3, line = 2)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 12)
mtext("Titre du Graphique 3", side = 3, line = 1)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 12)
mtext("Titre du Graphique 3", side = 3, line = 0.5)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext("Titre du Graphique 3", side = 3, line = 0.5)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext(expression("Graphiques pour " * alpha[12]), side = 3, line = 0.5)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = -2)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext(expression("Graphiques pour " * alpha[12]), side = 3, line = 0.5)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = 10)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext(expression("Graphiques pour " * alpha[12]), side = 3, line = 0.5)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = 14)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext(expression("Graphiques pour " * alpha[12]), side = 3, line = 0.5)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Titre du Graphique 4", side = 3, line = 12)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext(expression("Graphiques pour " * alpha[12]), side = 3, line = 0.5)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext("Graphiques pour " * alpha[22]), side = 3, line = 12)
library(coda)
par(ask = FALSE, mar = c(1, 1, 3, 1)) #Cette ligne permet d'ajuster les marges afin de configurer l'affichage du graphique
plot(mcmc(resultat_chain))
# Adicionar títulos personalizados
mtext("Título do Gráfico 1", side = 3, line = -2)
mtext("Título do Gráfico 2", side = 3, line = -2)
mtext("Título do Gráfico 3", side = 3, line = -2)
mtext("Título do Gráfico 4", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext(expression("Graphiques pour " * alpha[12]), side = 3, line = 0.5)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 12)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext(expression("Graphiques pour " * alpha[12]), side = 3, line = 0.5)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext(expression("Graphiques pour " * alpha[2]), side = 3, line = 12)
mtext("Titre du Graphique 5", side = 3, line = 2)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext(expression("Graphiques pour " * alpha[12]), side = 3, line = 0.5)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext(expression("Graphiques pour " * alpha[2]), side = 3, line = 12)
mtext("Titre du Graphique 5", side = 3, line = 1)
library(coda)
# Configurer les dimensions du dispositif graphique pour les 3 premiers graphiques
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques dans une matrice 3x1 et les marges
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
# Ajouter des titres personnalisés pour les 3 premiers graphiques
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext(expression("Graphiques pour " * alpha[12]), side = 3, line = 0.5)
# Configurer les dimensions du dispositif graphique pour les 2 derniers graphiques
par(mfrow = c(2, 1)) # Configure la disposition des graphiques dans une matrice 2x1
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
# Ajouter des titres personnalisés pour les 2 derniers graphiques
mtext(expression("Graphiques pour " * alpha[2]), side = 3, line = 12)
mtext(expression("Graphiques pour " * sigma), side = 3, line = 1)
library(coda)
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext(expression("Graphiques pour " * alpha[12]), side = 3, line = 0.5)
par(mfrow = c(2, 1)) # Configure la disposition des graphiques
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
mtext(expression("Graphiques pour " * alpha[2]), side = 3, line = 12)
mtext(expression("Graphiques pour " * sigma), side = 3, line = 1)
library(coda)
par(ask = FALSE, mfrow = c(3, 1), mar = c(1, 1, 3, 3)) # Configure la disposition des graphiques
# Tracer les 3 premiers graphiques des chaînes de Markov
plot(mcmc(resultat_chain[,1:3]))
mtext(expression("Graphiques pour " * alpha[0]), side = 3, line = 23)
mtext(expression("Graphiques pour " * alpha[1]), side = 3, line = 11.5)
mtext(expression("Graphiques pour " * alpha[12]), side = 3, line = 0.5)
par(mfrow = c(2, 1)) # Configure la disposition des graphiques
# Tracer les 2 derniers graphiques des chaînes de Markov
plot(mcmc(resultat_chain)[,4:5])
mtext(expression("Graphiques pour " * alpha[2]), side = 3, line = 12)
mtext(expression("Graphiques pour " * sigma), side = 3, line = 1)
# Notations changées par rapport au fichier seeds.data pour être en accord avec
# la consigne donnée
"N" <- 21
"r" <- c(10, 23, 23, 26, 17, 5, 53, 55, 32, 46, 10, 8, 10, 8, 23, 0, 3, 22, 15, 32, 3)
"n" <- c(39, 62, 81, 51, 39, 6, 74, 72, 51, 79, 13, 16, 30, 28, 45, 4, 12, 41, 30, 51, 7)
"x1" <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
"x2" <- c(0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1)
# mettre ce qui nous sert pour la suite
# Notations changées par rapport au fichier seeds.data pour être en accord avec
# la consigne donnée
"N" <- 21
"r" <- c(10, 23, 23, 26, 17, 5, 53, 55, 32, 46, 10, 8, 10, 8, 23, 0, 3, 22, 15, 32, 3)
"n" <- c(39, 62, 81, 51, 39, 6, 74, 72, 51, 79, 13, 16, 30, 28, 45, 4, 12, 41, 30, 51, 7)
"x1" <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
"x2" <- c(0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1)
alpha0 <- 0
alpha1 <- 0
alpha2 <- 0
alpha12 <- 0
tau <- 10
b <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
seeds = function(nchain, N, r, n, x1, x2, alpha0, alpha1, alpha2, alpha12, tau, b, prop_sd){
# Initialisation
res = matrix(NA, nchain + 1, 5)
res[1, ] = c(alpha0, alpha1, alpha12, alpha2, 1/sqrt(tau)) # le dernier terme vaut sigma
p = plogis(alpha0 + alpha1 * x1 + alpha2 * x2 + alpha12 * x1 * x2 + b)
res_b = matrix(NA, nchain + 1, N)
res_b[1, ] = b
acc_rates = rep(0, 4) # pour les 4 alpha
for (i in 1:nchain){
# Mise à jour de alpha0
alpha0 = res[i, 1]
prop = rnorm(1, alpha0, prop_sd[1]) # marche aléatoire simple
prop_p = plogis(prop + alpha1 * x1 + alpha2 * x2 + alpha12 * x1 * x2 + b)
top = - ((prop^2) / (2 * 1e6)) + sum(r * log(prop_p)) + sum((n-r) * log(1 - prop_p))
bottom = - ((alpha0^2) / (2 * 1e6)) + sum(r * log(p)) + sum((n-r) * log(1 - p))
acc_prob = exp(top - bottom) # Ratio des noyaux vaut 1 (symétrie du noyau)
if (runif(1) < min(1, acc_prob)){
alpha0 = prop
p = prop_p
acc_rates[1] = acc_rates[1] + 1
}
# Mise à jour de alpha1
alpha1 = res[i, 2]
prop = rnorm(1, alpha1, prop_sd[2]) # marche aléatoire simple
prop_p = plogis(alpha0 + prop * x1 + alpha2 * x2 + alpha12 * x1 * x2 + b)
top = - ((prop^2) / (2 * 1e6)) + sum(r * log(prop_p)) + sum((n-r) * log(1 - prop_p))
bottom = - ((alpha1^2) / (2 * 1e6)) + sum(r * log(p)) + sum((n-r) * log(1 - p))
acc_prob = exp(top - bottom) # Ratio des noyaux vaut 1 (symétrie du noyau)
if (runif(1) < min(1, acc_prob)){
alpha1 = prop
p = prop_p
acc_rates[2] = acc_rates[2] + 1
}
# Mise à jour de alpha12
alpha12 = res[i, 3]
prop = rnorm(1, alpha12, prop_sd[3]) # marche aléatoire simple
prop_p = plogis(alpha0 + alpha1 * x1 + alpha2 * x2 + prop * x1 * x2 + b)
top = - ((prop^2) / (2 * 1e6)) + sum(r * log(prop_p)) + sum((n-r) * log(1 - prop_p))
bottom = - ((alpha12^2) / (2 * 1e6)) + sum(r * log(p)) + sum((n-r) * log(1 - p))
acc_prob = exp(top - bottom) # Ratio des noyaux vaut 1 (symétrie du noyau)
if (runif(1) < min(1, acc_prob)){
alpha12 = prop
p = prop_p
acc_rates[3] = acc_rates[3] + 1
}
# Mise à jour de alpha2
alpha2 = res[i, 4]
prop = rnorm(1, alpha2, prop_sd[4]) # marche aléatoire simple
prop_p = plogis(alpha0 + alpha1 * x1 + prop * x2 + alpha12 * x1 * x2 + b)
top = - ((prop^2) / (2 * 1e6)) + sum(r * log(prop_p)) + sum((n-r) * log(1 - prop_p))
bottom = - ((alpha2^2) / (2 * 1e6)) + sum(r * log(p)) + sum((n-r) * log(1 - p))
acc_prob = exp(top - bottom) # Ratio des noyaux vaut 1 (symétrie du noyau)
if (runif(1) < min(1, acc_prob)){
alpha2 = prop
p = prop_p
acc_rates[4] = acc_rates[4] + 1
}
# Mise à jour de tau
tau = rgamma(1, shape = 10e-3 + N / 2, scale = 1e-3 + 0.5 * sum(b^2))
# Mise à jour de b
for (j in 1:N){
prop = rnorm(1, b[j], prop_sd[5])
prop_p_j = plogis(alpha0 + alpha1 * x1[j] + alpha2 * x2[j] + alpha12 * x1[j] * x2[j] + prop)
top = - (prop^2 * tau / 2) + r[j] * log(prop_p_j) + (n[j] - r[j]) * log(1 - prop_p_j)
bottom = - (b[j]^2 * tau / 2) + r[j] * log(p[j]) + (n[j] - r[j]) * log(1 - p[j])
acc_prob = exp(top - bottom)
if (runif(1) < min(1, acc_prob)){
b[j] = prop
p[j] = prop_p_j
}
}
# Mise à jour de la chaine de Markov et de b
res[i+1, ] = c(alpha0, alpha1, alpha12, alpha2, 1/sqrt(tau))
res_b[i+1, ] = b
}
my_list <- list("chain" = res, "b_chain" = res_b, "acc_rates" = acc_rates)
return(my_list)
}
resultat = seeds(1e4, N, r, n, x1, x2, alpha0, alpha1, alpha2, alpha12, tau, b, prop_sd = c(0.3, 0.3, 0.3, 0.3, 0.3)) # prop_sd choisi pour avoir une allure de chaîne cohérente
resultat_chain = resultat$chain[1001:nrow(resultat$chain), ] # on enlève les 1000 premiers (burnin)
moychain = colMeans(resultat_chain) # moyenne
sdchain = apply(resultat_chain, 2, sd) # écart type
cat("alpha_0 est estimé à", moychain[1], "avec un écart-type de", sdchain[1], "\n")
cat("alpha_1 est estimé à", moychain[2], "avec un écart-type de", sdchain[2], "\n")
cat("alpha_12 est estimé à", moychain[3], "avec un écart-type de", sdchain[3], "\n")
cat("alpha_2 est estimé à", moychain[4], "avec un écart-type de", sdchain[4], "\n")
cat("sigma est estimé à", moychain[5], "avec un écart-type de", sdchain[5], "\n")
Ndoses <-
6
Nplates <-
3
y <-
structure(c(15, 16, 16, 27, 33, 20, 21, 18, 26, 41, 38, 27, 29,
21, 33, 60, 41, 42), .Dim = c(6, 3))
x <-
c(0, 10, 33, 100, 333, 1000)
y
